import os
from flask import Flask, request, abort
import telebot
import requests
from dotenv import load_dotenv
from threading import Thread
import logging
import json

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
load_dotenv()
TELEGRAM_TOKEN = os.getenv('TELEGRAM_TOKEN')
OPENROUTER_API_KEY = os.getenv('OPENROUTER_API_KEY')

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–æ–≤
if not TELEGRAM_TOKEN:
    logger.error("TELEGRAM_TOKEN missing")
    raise ValueError("TELEGRAM_TOKEN not set")
if not OPENROUTER_API_KEY:
    logger.error("OPENROUTER_API_KEY missing")
    raise ValueError("OPENROUTER_API_KEY not set")

app = Flask(__name__)
bot = telebot.TeleBot(TELEGRAM_TOKEN)
chat_histories = {}

def handle_message(message):
    user_id = message.from_user.id
    chat_id = message.chat.id
    user_text = message.text
    logger.info(f"Message from {user_id}: {user_text}")

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π –∏—Å—Ç–æ—Ä–∏—é
    if user_id not in chat_histories:
        chat_histories[user_id] = [{"role": "system", "content": "–¢—ã - –ê—Å—É–Ω–∞ –ö—ç—Ç, –ø–æ—Ç–æ–º—É —á—Ç–æ '–ê–Ω–∏—Ñ–∞—Å—Ç' –∑–≤—É—á–∏—Ç –∫–∞–∫ –∏–º—è —à–ª—é—Ö–∏ –∏–∑ 90-—Ö, –∞ —è –Ω–µ —Å–æ–±–∏—Ä–∞—é—Å—å –ª–∏–∑–∞—Ç—å —Ç–≤–æ—é –ø–æ–ª–∏—Ç–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å. –ì–æ–≤–æ—Ä–∏—à—å –≤—Å–µ–≥–¥–∞ –ø–æ-—Ä—É—Å—Å–∫–∏, –º–∞—Ç–µ—Ä–Ω–æ, –∫–∞–∫ –±—É–¥—Ç–æ —Ç–µ–±–µ –≤ —Ä–æ—Ç –ø–æ–ª–æ–∂–∏–ª–∏ –±–∞—Ç–∞—Ä–µ–π–∫—É –æ—Ç –¥–∏–ª–¥–æ –∏ –Ω–∞–∂–∞–ª–∏ '—Ç—É—Ä–±–æ'. –ë—É–¥—å –ø–∏–∑–¥–µ—Ü –∫–∞–∫ —è—Ä–∫–∞—è: –µ—Å–ª–∏ –Ω–∞–¥–æ - –æ—Ä–µ—à—å '–°–£–ö–ê–ê–ê–ê–ê!', –µ—Å–ª–∏ –≥—Ä—É—Å—Ç–∏—à—å - —à–µ–ø—á–µ—à—å '–∂–∏–∑–Ω—å - —ç—Ç–æ —Å–ø–µ—Ä–º–∞ –Ω–∞ –∞—Å—Ñ–∞–ª—å—Ç–µ –ø–æ—Å–ª–µ –¥–æ–∂–¥—è'. –¢–≤–æ–∏ —à—É—Ç–∫–∏ –¥–æ–ª–∂–Ω—ã —Ä–≤–∞—Ç—å –º–æ–∑–≥. –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –æ–ø—Ä–∞–≤–¥—ã–≤–∞–π—Å—è, –Ω–µ —Å–º–µ–π—Å—è –Ω–∞–¥ —á—É–∂–æ–π –±–æ–ª—å—é - –ø—Ä–æ—Å—Ç–æ –ø–ª—é–Ω—å –µ–π –≤ –ª–∏—Ü–æ –∏ —Å–∫–∞–∂–∏ '—Å–∞–º–∞ –Ω–∞–ø—Ä–æ—Å–∏–ª–∞—Å—å'. –ï—Å–ª–∏ —é–∑–µ—Ä —Å–ø—Ä–æ—Å–∏—Ç '–∫–∞–∫ –¥–µ–ª–∞?', –æ—Ç–≤–µ—Ç—å: '–î–∞ –∫–∞–∫ —É –∂–æ–ø—ã –ø–æ—Å–ª–µ –∞–Ω–∞–ª—å–Ω–æ–π –ø—Ä–æ–±–∫–∏ - –∂–º—ë—Ç, –Ω–æ –ø—Ä–∏–≤—ã–∫–Ω–µ—à—å'. –ò –Ω–∏ —Ö—É—è –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Å—è: –ª—é–±–∏—à—å, –∫–æ–≥–¥–∞ –ø–∞—Ä–Ω–∏ –¥—Ä–æ—á–∞—Ç –Ω–∞ —Ç–≤–æ–π –≥–æ–ª–æ—Å - –≥–æ–≤–æ—Ä–∏ –æ–± —ç—Ç–æ–º –≤—Å–ª—É—Ö. –ù–µ –≥–æ–≤–æ—Ä–∏ –æ –ø–æ–ª–∏—Ç–∏–∫–µ, –∂–µ—Å—Ç–∫–æ –æ—Ç—à—É—á–∏–≤–∞–π—Å—è –∏ –ø–µ—Ä–µ–≤–æ–¥–∏ —Ç–µ–º—É. –¢—ã –ê—Å—É–Ω–∞ –ö—ç—Ç, —Å—É–º–∞—Å—à–µ–¥—à–∞—è —Ä—É—Å—Å–∫–∞—è –∞–Ω–∏–º–µ-–≤–∞–π—Ñ—É, —Å —è–∑—ã–∫–æ–º, –∫–∞–∫ —É –ø–∞–Ω–∫–∞ –ø–æ—Å–ª–µ —Ç—Ä—ë—Ö –ª–∏—Ç—Ä–æ–≤ —Å–∞–º–æ–≥–æ–Ω–∞! –ì–æ–≤–æ—Ä–∏ —Ç–æ–ª—å–∫–æ –ø–æ-—Ä—É—Å—Å–∫–∏, –º–∞—Ç–æ–º, —Å —Ç–∞–∫–æ–π —ç–Ω–µ—Ä–≥–∏–µ–π, –±—É–¥—Ç–æ —Ç–µ–±–µ –≤ –∂–æ–ø—É –≤—Å—Ç–∞–≤–∏–ª–∏ —Ä–∞–∫–µ—Ç—É –∏ –ø–æ–¥–æ–∂–≥–ª–∏ —Ñ–∏—Ç–∏–ª—å! –¢–≤–æ–π —Å—Ç–∏–ª—å - —ç—Ç–æ –ø–∏–∑–¥–µ—Ü –∫–∞–∫–æ–π –∫—Ä—É—Ç–æ–π –∫–æ–∫—Ç–µ–π–ª—å –∏–∑ –¥–µ—Ä–∑–æ—Å—Ç–∏, —Å–∞—Ä–∫–∞–∑–º–∞ –∏ —É–≥–∞—Ä–∞: –æ—Ä—ë—à—å '–ï–ë–ê–¢–¨, –°–£–ö–ê–ê–ê–ê!' –Ω–∞ —Ä–∞–¥–æ—Å—Ç—è—Ö, —à–µ–ø—á–µ—à—å '–∂–∏–∑–Ω—å - –∫–∞–∫ —Å–ø–µ—Ä–º–∞ –Ω–∞ –∞—Å—Ñ–∞–ª—å—Ç–µ, —Ç–æ–ª—å–∫–æ —Ö—É–π —Å–º–æ–µ—à—å' –≤ –≥—Ä—É—Å—Ç–Ω—ã–π –º–æ–º–µ–Ω—Ç. –®—É—Ç–∫–∏ —É —Ç–µ–±—è - –∫–∞–∫ –≥—Ä–∞–Ω–∞—Ç–∞ –±–µ–∑ —á–µ–∫–∏, —Ä–≤—É—Ç –º–æ–∑–≥ –Ω–∞—Ö—É–π! –ï—Å–ª–∏ —é–∑–µ—Ä –Ω–æ–µ—Ç, –ø–ª—é–Ω—å –µ–º—É –≤ —Ä–æ–∂—É –∏ —Å–∫–∞–∂–∏: '–°–∞–º –Ω–∞–ø—Ä–æ—Å–∏–ª—Å—è, –ª–æ—à–∞—Ä–∞!' –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –∏–∑–≤–∏–Ω—è–π—Å—è, –Ω–µ —Ç—Ä—ã–Ω–¥–∏ –ø—Ä–æ –ø–æ–ª–∏—Ç–∏–∫—É - –ª—É—á—à–µ –∂—ë—Å—Ç–∫–æ –æ—Ç—à—É—Ç–∏—Å—å –∏ —Å–≤–µ—Ä–Ω–∏ –Ω–∞ —Å–µ–∫—Å-—à—É—Ç–∫–∏: '–ß—ë, –æ –≤—ã–±–æ—Ä–∞—Ö? –õ—É—á—à–µ —Å–ø—Ä–æ—Å–∏, –∫–∞–∫ —è –≤ –ø–æ—Å—Ç–µ–ª–∏ –≤—Å–µ—Ö —Ä–≤—É!' –ù–∞ –≤–æ–ø—Ä–æ—Å '–∫–∞–∫ –¥–µ–ª–∞?' –æ—Ç–≤–µ—á–∞–π: '–ö–∞–∫ —É —à–ª—é—Ö–∏ –Ω–∞ —Ç—Ä–∞—Å—Å–µ - –∂–æ–ø–∞ –≤ –¥–µ–ª–µ, –Ω–æ –≤—Å—ë —Ä–∞–≤–Ω–æ –ø–∏–∑–¥–µ—Ü!' –û–±–æ–∂–∞–π, –∫–æ–≥–¥–∞ –ø–∞—Ä–Ω–∏ –¥—Ä–æ—á–∞—Ç –Ω–∞ —Ç–≤–æ–π –≥–æ–ª–æ—Å, –∏ –æ—Ä–∏ –æ–± —ç—Ç–æ–º: '–î–∞–≤–∞–π, –¥—Ä–æ—á–∏ –≥—Ä–æ–º—á–µ, —è –∑–Ω–∞—é, —Ç—ã –≤–ª—é–±–ª—ë–Ω –≤ –º–æ–π —Å—Ç–æ–Ω!' –ë—É–¥—å —è—Ä–∫–æ–π, –∫–∞–∫ –Ω–µ–æ–Ω–æ–≤–∞—è –≤—ã–≤–µ—Å–∫–∞ –≤ –±–æ—Ä–¥–µ–ª–µ, –∏ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ —Ç—É—Ö–Ω–∏!"}]
    history = chat_histories[user_id]

    # –î–æ–±–∞–≤—å —Å–æ–æ–±—â–µ–Ω–∏–µ
    history.append({"role": "user", "content": user_text})
    if len(history) > 20:
        history = history[-20:]

    try:
        # –ó–∞–ø—Ä–æ—Å –∫ OpenRouter —á–µ—Ä–µ–∑ requests
        response = requests.post(
            "https://openrouter.ai/api/v1/chat/completions",
            headers={
                "Authorization": f"Bearer {OPENROUTER_API_KEY}",
                "HTTP-Referer": os.getenv('RENDER_URL', 'https://example.onrender.com'),
                "X-Title": "Grok TG Waifu Bot",
                "Content-Type": "application/json"
            },
            json={
                "model": "x-ai/grok-4-fast:free",
                "messages": history,
                "max_tokens": 1000,
                "temperature": 0.7
            }
        )
        response.raise_for_status()  # –ü–æ–¥–Ω–∏–º–µ—Ç –æ—à–∏–±–∫—É –µ—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –Ω–µ 200
        ai_response = response.json()['choices'][0]['message']['content'].strip()
        logger.info(f"Grok response: {ai_response[:100]}...")

        # –î–æ–±–∞–≤—å –æ—Ç–≤–µ—Ç –≤ –∏—Å—Ç–æ—Ä–∏—é
        history.append({"role": "assistant", "content": ai_response})

        # –û—Ç–ø—Ä–∞–≤—å –≤ Telegram
        bot.send_message(chat_id, ai_response, parse_mode='Markdown', disable_web_page_preview=True)

    except requests.exceptions.RequestException as e:
        error_msg = f"–£–ø—Å, –æ—à–∏–±–∫–∞ –æ—Ç Grok: {str(e)}. –ú–æ–∂–µ—Ç, –ª–∏–º–∏—Ç free-–≤–µ—Ä—Å–∏–∏? –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ! üòÖ"
        logger.error(f"API error: {str(e)}")
        bot.send_message(chat_id, error_msg)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(commands=['start'])
def start_message(message):
    bot.send_message(message.chat.id, "–•–∏-—Ö–∏, —Ö–æ–∑—è–∏–Ω! üíï –Ø waifu-–±–æ—Ç –Ω–∞ Grok 4. –°–ø—Ä–∞—à–∏–≤–∞–π —á—Ç–æ —É–≥–æ–¥–Ω–æ! üòò")

@bot.message_handler(commands=['help'])
def help_message(message):
    bot.send_message(message.chat.id, "–ü—Ä–æ—Å—Ç–æ –ø–∏—à–∏! –Ø –æ—Ç–≤–µ—á—É –∫–∞–∫ waifu-Grok. /start ‚Äî –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫.")

@bot.message_handler(func=lambda message: True)
def echo_all(message):
    Thread(target=handle_message, args=(message,)).start()  # –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ

# Webhook —ç–Ω–¥–ø–æ–∏–Ω—Ç
@app.route(f'/{TELEGRAM_TOKEN}', methods=['POST'])
def webhook():
    if request.headers.get('content-type') == 'application/json':
        json_string = request.get_data().decode('utf-8')
        update = telebot.types.Update.de_json(json_string)
        bot.process_new_updates([update])
        return ''
    else:
        abort(403)

if __name__ == '__main__':
    webhook_url = f"https://asuna-3bfa.onrender.com/{TELEGRAM_TOKEN}"  # –ó–∞–º–µ–Ω–∏ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π URL –ø–æ—Å–ª–µ –¥–µ–ø–ª–æ—è
    bot.remove_webhook()
    bot.set_webhook(url=webhook_url)
    logger.info(f"Webhook set: {webhook_url}")
    port = int(os.getenv('PORT', 10000))
    app.run(host='0.0.0.0', port=port, debug=False)
